par(mfrow=c(1,2))
boxplot(data$wind_direction, main="Направление ветра")
data <- read.csv("SolarPrediction.csv", header=TRUE)
nrow(data)
ncol(data)
head(data)
str(data)
colnames(data) <- c("unix_time","date","time", "radiation", "temperature", "pressure", "humidity", "wind_direction", "wind_speed", "sun_rise", "sun_set")
rise <- strptime(paste(gsub(data$date, pattern = '\\s{1,}\\d.*$', replacement = ' '), data$sun_rise), '%m/%d/%Y %H:%M:%S') # время восхода солнца
set <- strptime(paste(gsub(data$date, pattern = '\\s{1,}\\d.*$', replacement = ' '), data$sun_set), '%m/%d/%Y %H:%M:%S') # время захода солнца
day_of_year <- as.POSIXlt(data$unix_time,origin='1970-01-01')$yday
data$day_time <- as.numeric(difftime(set,rise,units ='hours')) # время дня в часах
data$day_of_year <- day_of_year
#data <- data.frame(Daytime=as.numeric(difftime(set,rise,units ='hours')),data)
data <- data[,-c(1,10,11)]
data1<-data
par(mfrow=c(1,2))
boxplot(data$radiation, main="Солнечная радиация")
boxplot(data$temperature, main="Температура воздуха")
boxplot(data$pressure, main="Давление")
boxplot(data$humidity, main="Влажность")
boxplot(data$wind_direction, main="Направление ветра")
boxplot(data$wind_speed, main="Скорость ветра")
library(dplyr)
data <- data %>%
filter(radiation>=100 & radiation<1000) %>%
filter(temperature>42 & temperature<=70)%>%
filter(pressure>30.33 & pressure<30.54)%>%
filter(wind_direction<=210)%>%
filter(wind_speed<=12)
library(dplyr)
data <- data %>%
filter(radiation>=100 & radiation<1000) %>%
filter(temperature>42 & temperature<=70)%>%
filter(pressure>30.33 & pressure<30.54)%>%
filter(wind_direction<=210)%>%
filter(wind_speed<=12)
par(mfrow=c(1,2))
boxplot(data$radiation, main="Солнечная радиация")
boxplot(data$temperature, main="Температура воздуха")
boxplot(data$pressure, main="Давление")
boxplot(data$humidity, main="Влажность")
boxplot(data$wind_direction, main="Направление ветра")
boxplot(data$wind_speed, main="Скорость ветра")
#linear.model.1 <- lm(radiation ~ temperature +pressure +humidity +wind_direction +wind_speed +day_time, data=data)
linear.model.1 <- lm(temperature ~ radiation +pressure +humidity +wind_direction +wind_speed +day_time, data=data)
summary(linear.model.1)
plot(linear.model.1)
odds <- seq(1, nrow(data), by=2)
data.in <- data[odds,] # data[1,], data[3,] ...
data.out <- data[-odds,] # data[2,], data[4,] ...
linear.model.half.1 <- lm(temperature ~ radiation +humidity +wind_direction +wind_speed +day_time, data=data) # тренировка лин. модели по набору данных data.in
summary(linear.model.half.1)
predict.1 <- predict(linear.model.half.1, data.in)
cor(data.in$temperature, predict.1)
plot(data.in$temperature, predict.1)
predict.out.1 <- predict(linear.model.half.1, data.out) # предсказание значений по валидационному набору
cor(data.out$temperature, predict.out.1)
plot(data.out$temperature, predict.out.1)
View(linear.model.half.1)
View(data)
predict(linear.model.half.1, c(325.51, 81,99.5,9,10.9))
a <- data.frame(radiation=325.51, humidity=81,wind_direction=99.5,wind_speed=9,day_time10.9)
a <- data.frame(radiation=325.51, humidity=81,wind_direction=99.5,wind_speed=9,day_time=10.9)
predict(linear.model.half.1,a)
a <- data.frame(radiation=300.94, humidity=57,wind_direction=139.96,wind_speed=11.25,day_time=11.06667)
predict(linear.model.half.1,a)
a <- data.frame(radiation=356.60, humidity=63,wind_direction=181.48,wind_speed=10.12,day_time=12.26667)
predict(linear.model.half.1,a)
odds <- seq(1, nrow(data), by=2)
data.in <- data[odds,] # data[1,], data[3,] ...
data.out <- data[-odds,] # data[2,], data[4,] ...
linear.model.half.1 <- lm(temperature ~ radiation +humidity +day_time, data=data) # тренировка лин. модели по набору данных data.in
summary(linear.model.half.1)
linear.model.half.1 <- lm(temperature ~ radiation , data=data) # тренировка лин. модели по набору данных data.in
summary(linear.model.half.1)
linear.model.half.1 <- lm( radiation ~ temperature , data=data) # тренировка лин. модели по набору данных data.in
summary(linear.model.half.1)
#linear.model.1 <- lm(radiation ~ temperature +pressure +humidity +wind_direction +wind_speed +day_time, data=data)
linear.model.1 <- lm(temperature ~ radiation +pressure +humidity +wind_direction +wind_speed +day_time, data=data)
summary(linear.model.1)
plot(linear.model.1)
odds <- seq(1, nrow(data), by=2)
data.in <- data[odds,] # data[1,], data[3,] ...
data.out <- data[-odds,] # data[2,], data[4,] ...
linear.model.half.1 <- lm(temperature ~ radiation +pressure +humidity +wind_direction +wind_speed +day_time, data=data) # тренировка лин. модели по набору данных data.in
summary(linear.model.half.1)
validation_index <- createDataPartition(data$radiation, p=0.80, list=FALSE)
library(caret)
install.packages("caret")
library(caret)
validation_index <- createDataPartition(data$radiation, p=0.80, list=FALSE)
validation <- data[-validation_index,]
library(caret)
validation_index <- createDataPartition(data$radiation, p=0.80, list=FALSE)
validation <- data[-validation_index,]
linear.model.half.1 <- lm(temperature ~ radiation +pressure +humidity +wind_direction +wind_speed +day_time, data=data) # тренировка лин. модели по набору данных data.in
summary(linear.model.half.1)
predict.1 <- predict(linear.model.half.1, data)
cor(data.in$temperature, predict.1)
predict.1 <- predict(linear.model.half.1, data)
cor(data$temperature, predict.1)
plot(data$temperature, predict.1)
predict.out.1 <- predict(linear.model.half.1, validation) # предсказание значений по валидационному набору
cor(validation$temperature, predict.out.1)
plot(validation$temperature, predict.out.1)
odds <- seq(1, nrow(data), by=)
data.in <- data[odds,] # data[1,], data[3,] ...
data.out <- data[-odds,] # data[2,], data[4,] ...
linear.model.half.1 <- lm(temperature ~ radiation +pressure +humidity +wind_direction +wind_speed +day_time, data=data.in) # тренировка лин. модели по набору данных data.in
summary(linear.model.half.1)
odds <- seq(1, nrow(data), by=)
data.in <- data[odds,] # data[1,], data[3,] ...
data.out <- data[-odds,] # data[2,], data[4,] ...
linear.model.half.1 <- lm(temperature ~ radiation +pressure +humidity +wind_direction +wind_speed +day_time, data=data.in) # тренировка лин. модели по набору данных data.in
summary(linear.model.half.1)
data <- read.csv("SolarPrediction.csv", header=TRUE)
nrow(data)
ncol(data)
head(data)
str(data)
colnames(data) <- c("unix_time","date","time", "radiation", "temperature", "pressure", "humidity", "wind_direction", "wind_speed", "sun_rise", "sun_set")
rise <- strptime(paste(gsub(data$date, pattern = '\\s{1,}\\d.*$', replacement = ' '), data$sun_rise), '%m/%d/%Y %H:%M:%S') # время восхода солнца
set <- strptime(paste(gsub(data$date, pattern = '\\s{1,}\\d.*$', replacement = ' '), data$sun_set), '%m/%d/%Y %H:%M:%S') # время захода солнца
day_of_year <- as.POSIXlt(data$unix_time,origin='1970-01-01')$yday
data$day_time <- as.numeric(difftime(set,rise,units ='hours')) # время дня в часах
data$day_of_year <- day_of_year
#data <- data.frame(Daytime=as.numeric(difftime(set,rise,units ='hours')),data)
data <- data[,-c(1,10,11)]
data1<-data
library(dplyr)
data <- data %>%
filter(radiation>=100 & radiation<1000) %>%
filter(temperature>42 & temperature<=70)%>%
filter(pressure>30.33 & pressure<30.54)%>%
filter(wind_direction<=210)%>%
filter(wind_speed<=12)
par(mfrow=c(1,2))
boxplot(data$radiation, main="Солнечная радиация")
boxplot(data$temperature, main="Температура воздуха")
boxplot(data$pressure, main="Давление")
boxplot(data$humidity, main="Влажность")
boxplot(data$wind_direction, main="Направление ветра")
boxplot(data$wind_speed, main="Скорость ветра")
odds <- seq(1, nrow(data), by=)
data.in <- data[odds,] # data[1,], data[3,] ...
data.out <- data[-odds,] # data[2,], data[4,] ...
predict.1 <- predict(linear.model.half.1, data.in)
cor(data.in$temperature, predict.1)
plot(data.in$temperature, predict.1)
predict.out.1 <- predict(linear.model.half.1, data.out) # предсказание значений по валидационному набору
cor(data.out$temperature, predict.out.1)
plot(data.out$temperature, predict.out.1)
predict.out.1 <- predict(linear.model.half.1, data.out) # предсказание значений по валидационному набору
cor(data.out$temperature, predict.out.1)
plot(data.out$temperature, predict.out.1)
predict.out.1 <- predict(linear.model.half.1, data.out) # предсказание значений по валидационному набору
cor(data.out$temperature, predict.out.1)
plot(data.out$temperature, predict.out.1)
odds <- seq(1, nrow(data), by=2)
data.in <- data[odds,] # data[1,], data[3,] ...
data.out <- data[-odds,] # data[2,], data[4,] ...
linear.model.half.1 <- lm(temperature ~ radiation +pressure +humidity +wind_direction +wind_speed +day_time, data=data.in) # тренировка лин. модели по набору данных data.in
summary(linear.model.half.1)
predict.1 <- predict(linear.model.half.1, data.in)
cor(data.in$temperature, predict.1)
plot(data.in$temperature, predict.1)
predict.out.1 <- predict(linear.model.half.1, data.out) # предсказание значений по валидационному набору
cor(data.out$temperature, predict.out.1)
plot(data.out$temperature, predict.out.1)
data <- read.csv("SolarPrediction.csv", header=TRUE)
nrow(data)
ncol(data)
head(data)
str(data)
colnames(data) <- c("unix_time","date","time", "radiation", "temperature", "pressure", "humidity", "wind_direction", "wind_speed", "sun_rise", "sun_set")
rise <- strptime(paste(gsub(data$date, pattern = '\\s{1,}\\d.*$', replacement = ' '), data$sun_rise), '%m/%d/%Y %H:%M:%S') # время восхода солнца
set <- strptime(paste(gsub(data$date, pattern = '\\s{1,}\\d.*$', replacement = ' '), data$sun_set), '%m/%d/%Y %H:%M:%S') # время захода солнца
day_of_year <- as.POSIXlt(data$unix_time,origin='1970-01-01')$yday
data$day_time <- as.numeric(difftime(set,rise,units ='hours')) # время дня в часах
data$day_of_year <- day_of_year
#data <- data.frame(Daytime=as.numeric(difftime(set,rise,units ='hours')),data)
data <- data[,-c(1,10,11)]
data1<-data
library(dplyr)
data <- data %>%
filter(radiation>=100 & radiation<1000) %>%
filter(temperature>42 & temperature<=70)%>%
filter(pressure>30.33 & pressure<30.54)%>%
filter(wind_direction<=210)%>%
filter(wind_speed<=12)
library(dplyr)
data <- data %>%
filter(radiation>=100 & radiation<1000) %>%
filter(temperature>42 & temperature<=70)%>%
filter(pressure>30.33 & pressure<30.54)%>%
filter(wind_direction<=210)%>%
filter(wind_speed<=12)
odds <- seq(1, nrow(data), by=2)
data.in <- data[odds,] # data[1,], data[3,] ...
data.out <- data[-odds,] # data[2,], data[4,] ...
linear.model.half.1 <- lm(temperature ~ radiation +pressure +humidity +wind_direction +wind_speed +day_time, data=data.in) # тренировка лин. модели по набору данных data.in
summary(linear.model.half.1)
predict.1 <- predict(linear.model.half.1, data.in)
cor(data.in$temperature, predict.1)
plot(data.in$temperature, predict.1)
predict.out.1 <- predict(linear.model.half.1, data.out) # предсказание значений по валидационному набору
cor(data.out$temperature, predict.out.1)
plot(data.out$temperature, predict.out.1)
linear.model.half.1 <- lm(temperature ~ radiation +pressure +humidity +wind_speed +day_time, data=data.in) # тренировка лин. модели по набору данных data.in
summary(linear.model.half.1)
predict.1 <- predict(linear.model.half.1, data.in)
cor(data.in$temperature, predict.1)
plot(data.in$temperature, predict.1)
predict.out.1 <- predict(linear.model.half.1, data.out) # предсказание значений по валидационному набору
cor(data.out$temperature, predict.out.1)
plot(data.out$temperature, predict.out.1)
library(caret)
linear.model.half.1 <- lm(temperature ~ radiation +pressure +humidity +wind_speed +day_time, data=data.in) # тренировка лин. модели по набору данных data.in
summary(linear.model.half.1)
predict.1 <- predict(linear.model.half.1, data.in)
cor(data.in$temperature, predict.1)
plot(data.in$temperature, predict.1)
predict.out.1 <- predict(linear.model.half.1, data.out) # предсказание значений по валидационному набору
cor(data.out$temperature, predict.out.1)
plot(data.out$temperature, predict.out.1)
View(data)
predict(linear.model.half.1, data.frame(radiation=895.78,pressure=30.46,humidity=32,wind_speed=5.62,day_time=11.33))
predict(linear.model.half.1,data.frame(radiation=55, pressure=55, humidity=55, wind_speed=55, day_time=55)
)
data <- read.csv("SolarPrediction.csv", header=TRUE)
View(data)
